//══════════════════════════════════════════════════════════════════════════════════════════════════

use rand::Rng;
use std::cmp::Ordering;
use std::io;

//══════════════════════════════════════════════════════════════════════════════════════════════════

//┌────────────────────────────────────────────────────────────────────────────────────────────────┐
/// Main.
//└────────────────────────────────────────────────────────────────────────────────────────────────┘

fn main()
    {

    //┌────────────────────────────────────────────────────────────────────────────────────────────┐
    //│ Choose a secret number.
    //└────────────────────────────────────────────────────────────────────────────────────────────┘

    let secret_number = rand::thread_rng().gen_range(1..101);

    //┌────────────────────────────────────────────────────────────────────────────────────────────┐
    //│ Create a string buffer to receive the user's guesses.
    //└────────────────────────────────────────────────────────────────────────────────────────────┘

    let mut response = String::new();

    //┌────────────────────────────────────────────────────────────────────────────────────────────┐
    //│ Announce the game.
    //└────────────────────────────────────────────────────────────────────────────────────────────┘

    println!("Guess the number!");

    //┌────────────────────────────────────────────────────────────────────────────────────────────┐
    //│ Loop over the user's guesses.
    //└────────────────────────────────────────────────────────────────────────────────────────────┘

    loop
        {

        //┌────────────────────────────────────────────────────────────────────────────────────────┐
        //│ Prompt the user.
        //└────────────────────────────────────────────────────────────────────────────────────────┘

        println!("What's your guess?");

        //┌────────────────────────────────────────────────────────────────────────────────────────┐
        //│ Collect the user's guess.
        //└────────────────────────────────────────────────────────────────────────────────────────┘

        response.clear();

        io::stdin()
            .read_line(&mut response)
            .expect   ("Failed to read line");

        //┌────────────────────────────────────────────────────────────────────────────────────────┐
        //│ Convert the user's guess into a number.
        //└────────────────────────────────────────────────────────────────────────────────────────┘

        let guess: u32 = match response.trim().parse()
            {
            Ok(num) => num,
            Err(_)       => {println!("What?"); continue},
            };

        //┌────────────────────────────────────────────────────────────────────────────────────────┐
        //│ Tell the user what they guessed.
        //└────────────────────────────────────────────────────────────────────────────────────────┘

        println!("You guessed: |{}|", guess);

        //┌────────────────────────────────────────────────────────────────────────────────────────┐
        //│ Tell the user how their guess compares to the secret number.
        //└────────────────────────────────────────────────────────────────────────────────────────┘

        match guess.cmp(&secret_number)
            {
            Ordering::Less    => { println!("Too small!")         },
            Ordering::Greater => { println!("Too big!"  )         },
            Ordering::Equal   => { println!("You win!"  ); break; }
            }

        }

    }
